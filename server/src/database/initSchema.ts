import { database } from './neo4j';

export async function initializeSchema() {
  const session = await database.getSession();
  
  try {
    console.log('üèóÔ∏è  Initializing database schema...');
    
    // Create indexes for better performance
    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (b:Book) ON (b.id)
    `);
    
    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (p:Page) ON (p.id)
    `);
    
    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (c:Content) ON (c.id)
    `);
    
    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (t:Tag) ON (t.id)
    `);
    
    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (tc:TagCategory) ON (tc.id)
    `);

    console.log('üè∑Ô∏è  Initializing default categories...');
    
    // Create default tag categories
    const defaultCategories = [
      {
        id: 'time',
        name: '–í—Ä–µ–º—è',
        description: '–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã, –¥–∞—Ç—ã, —ç–ø–æ—Ö–∏',
        color: '#3B82F6',
        type: 'default'
      },
      {
        id: 'people', 
        name: '–õ—é–¥–∏',
        description: '–ü–µ—Ä—Å–æ–Ω—ã, –∞–≤—Ç–æ—Ä—ã, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏',
        color: '#EF4444',
        type: 'default'
      },
      {
        id: 'location',
        name: '–õ–æ–∫–∞—Ü–∏–∏',
        description: '–ú–µ—Å—Ç–∞, –≥–æ—Ä–æ–¥–∞, —Å—Ç—Ä–∞–Ω—ã, —Ä–µ–≥–∏–æ–Ω—ã',
        color: '#F59E0B',
        type: 'default'
      }
    ];

    for (const category of defaultCategories) {
      await session.run(`
        MERGE (c:TagCategory {id: $id})
        ON CREATE SET 
          c.name = $name,
          c.description = $description, 
          c.color = $color,
          c.type = $type,
          c.createdAt = datetime()
        ON MATCH SET
          c.updatedAt = datetime()
      `, category);
    }

    console.log('‚úÖ Database schema initialized successfully');
    
  } catch (error) {
    console.error('‚ùå Failed to initialize database schema:', error);
    throw error;
  } finally {
    await session.close();
  }
}
