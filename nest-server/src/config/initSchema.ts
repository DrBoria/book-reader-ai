import { database } from './neo4j';

export async function initializeSchema() {
  const session = database.getSession();

  try {
    console.log('üèóÔ∏è  Initializing database schema...');

    // Create indexes for better performance
    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (b:Book) ON (b.id)
    `);

    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (p:Page) ON (p.id)
    `);

    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (c:Content) ON (c.id)
    `);

    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (t:Tag) ON (t.id)
    `);

    await session.run(`
      CREATE INDEX IF NOT EXISTS FOR (tc:TagCategory) ON (tc.id)
    `);

    console.log('üè∑Ô∏è  Initializing default categories...');

    // Create default and custom tag categories
    const allCategories = [
      // Default system categories
      {
        id: 'time',
        name: '–í—Ä–µ–º—è',
        description: '–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã, –¥–∞—Ç—ã, —ç–ø–æ—Ö–∏, —Å—Ç–æ–ª–µ—Ç–∏—è, –≥–æ–¥—ã, –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏—è',
        color: '#3B82F6',
        type: 'default',
        dataType: 'date',
        keywords: ['when', 'time', 'date', 'year', 'period', 'era', 'century', 'decade', 'temporal', '–∫–æ–≥–¥–∞', '–≤—Ä–µ–º—è', '–¥–∞—Ç–∞', '–≥–æ–¥', '–ø–µ—Ä–∏–æ–¥', '—ç–ø–æ—Ö–∞', '–≤–µ–∫', '—Å—Ç–æ–ª–µ—Ç–∏–µ']
      },
      {
        id: 'people',
        name: '–õ—é–¥–∏',
        description: '–ü–µ—Ä—Å–æ–Ω—ã, –∞–≤—Ç–æ—Ä—ã, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏, —É—á–µ–Ω—ã–µ, –ø–∏—Å–∞—Ç–µ–ª–∏, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏',
        color: '#EF4444',
        type: 'default',
        dataType: 'text',
        keywords: ['who', 'people', 'person', 'name', 'author', 'individual', 'human', 'character', 'scientist', 'researcher', 'writer', '–∫—Ç–æ', '–ª—é–¥–∏', '—á–µ–ª–æ–≤–µ–∫', '–∏–º—è', '–∞–≤—Ç–æ—Ä', '–ª–∏—á–Ω–æ—Å—Ç—å', '–ø–µ—Ä—Å–æ–Ω–∞', '–ø–µ—Ä—Å–æ–Ω–∞–∂', '—É—á–µ–Ω—ã–π', '–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', '–ø–∏—Å–∞—Ç–µ–ª—å']
      },
      {
        id: 'location',
        name: '–õ–æ–∫–∞—Ü–∏–∏',
        description: '–ú–µ—Å—Ç–∞, –≥–æ—Ä–æ–¥–∞, —Å—Ç—Ä–∞–Ω—ã, —Ä–µ–≥–∏–æ–Ω—ã, –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –∑–¥–∞–Ω–∏—è, —É—á—Ä–µ–∂–¥–µ–Ω–∏—è',
        color: '#F59E0B',
        type: 'default',
        dataType: 'text',
        keywords: ['where', 'place', 'location', 'city', 'country', 'region', 'area', 'geography', 'state', 'province', 'continent', 'ocean', 'river', 'mountain', 'building', 'address', 'university', '–≥–¥–µ', '–º–µ—Å—Ç–æ', '–ª–æ–∫–∞—Ü–∏—è', '–≥–æ—Ä–æ–¥', '—Å—Ç—Ä–∞–Ω–∞', '—Ä–µ–≥–∏–æ–Ω', '–≥–µ–æ–≥—Ä–∞—Ñ–∏—è', '—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è', '–æ–±–ª–∞—Å—Ç—å', '–∫—Ä–∞–π', '—É–ª–∏—Ü–∞', '–∑–¥–∞–Ω–∏–µ', '—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç']
      },
      // Custom domain-specific categories
      {
        id: 'ideas_from_past',
        name: 'Ideas from the Past',
        description: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∏–¥–µ–∏, –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏, —Ç–µ–æ—Ä–∏–∏, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ, –Ω–∞—É—á–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è',
        color: '#8B5CF6',
        type: 'custom',
        dataType: 'text',
        keywords: ['idea', 'concept', 'theory', 'discovery', 'invention', 'innovation', 'breakthrough', 'achievement', 'legacy', 'historical', 'past', 'traditional', '–∏–¥–µ—è', '–∫–æ–Ω—Ü–µ–ø—Ü–∏—è', '—Ç–µ–æ—Ä–∏—è', '–æ—Ç–∫—Ä—ã—Ç–∏–µ', '–∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ', '–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ', '–Ω–∞—Å–ª–µ–¥–∏–µ', '–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π']
      },
      {
        id: 'technology_concepts',
        name: 'Technology & Concepts',
        description: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏, —Å–∏—Å—Ç–µ–º—ã, –º–µ—Ç–æ–¥—ã, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ',
        color: '#10B981',
        type: 'custom',
        dataType: 'text',
        keywords: ['technology', 'system', 'method', 'tool', 'software', 'hardware', 'computer', 'algorithm', 'program', 'machine', 'device', '—Ç–µ—Ö–Ω–∏–∫–∞', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è', '—Å–∏—Å—Ç–µ–º–∞', '–º–µ—Ç–æ–¥', '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç', '–ø—Ä–æ–≥—Ä–∞–º–º–∞', '–∫–æ–º–ø—å—é—Ç–µ—Ä', '–∞–ª–≥–æ—Ä–∏—Ç–º', '–º–∞—à–∏–Ω–∞', '—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ']
      },
      {
        id: 'organizations',
        name: 'Organizations',
        description: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∫–æ–º–ø–∞–Ω–∏–∏, —É—á—Ä–µ–∂–¥–µ–Ω–∏—è, —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã, –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
        color: '#F472B6',
        type: 'custom',
        dataType: 'text',
        keywords: ['organization', 'company', 'corporation', 'institution', 'university', 'government', 'agency', 'department', 'foundation', 'society', '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è', '–∫–æ–º–ø–∞–Ω–∏—è', '—É—á—Ä–µ–∂–¥–µ–Ω–∏–µ', '—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', '–ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ', '–¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç', '—Ñ–æ–Ω–¥', '–æ–±—â–µ—Å—Ç–≤–æ']
      },
      {
        id: 'events',
        name: 'Events',
        description: '–°–æ–±—ã—Ç–∏—è, –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è, –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏, –ø—Ä–æ–µ–∫—Ç—ã, –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è',
        color: '#06B6D4',
        type: 'custom',
        dataType: 'text',
        keywords: ['event', 'conference', 'project', 'program', 'initiative', 'meeting', 'summit', 'congress', 'symposium', 'workshop', '—Å–æ–±—ã—Ç–∏–µ', '–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è', '–ø—Ä–æ–µ–∫—Ç', '–ø—Ä–æ–≥—Ä–∞–º–º–∞', '–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞', '–≤—Å—Ç—Ä–µ—á–∞', '—Å–∞–º–º–∏—Ç', '–∫–æ–Ω–≥—Ä–µ—Å—Å', '—Å–∏–º–ø–æ–∑–∏—É–º']
      }
    ];

    for (const category of allCategories) {
      await session.run(`
        MERGE (c:TagCategory {id: $id})
        ON CREATE SET 
          c.name = $name,
          c.description = $description, 
          c.color = $color,
          c.type = $type,
          c.dataType = $dataType,
          c.keywords = $keywords,
          c.createdAt = datetime()
        ON MATCH SET
          c.keywords = $keywords,
          c.dataType = $dataType,
          c.updatedAt = datetime()
      `, category);
    }

    console.log('‚úÖ Database schema initialized successfully');

  } catch (error) {
    console.error('‚ùå Failed to initialize database schema:', error);
    throw error;
  } finally {
    await session.close();
  }
}
